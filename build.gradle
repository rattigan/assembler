version = "0.0"

apply plugin: 'java'
apply plugin: 'maven'

repositories {
    jcenter()
    maven { url "https://jitpack.io" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    // collections
    compile 'com.github.rattigan.nonstd:seq:-SNAPSHOT'

    // promises
    compile 'com.github.rattigan.nonstd:promises:-SNAPSHOT'

    // dependency injection
    compile 'com.google.inject:guice:4.0'
    compile 'com.google.inject.extensions:guice-multibindings:4.0'

    // yaml
    compile 'org.yaml:snakeyaml:1.17'

    // json
    compile 'com.fasterxml.jackson.core:jackson-core:2.7.3'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.3'

    // logging
    compile 'org.slf4j:slf4j-api:1.7.16'
    testCompile 'ch.qos.logback:logback-classic:1.1.5'
    testCompile 'org.slf4j:slf4j-api:1.7.16'
    testCompile 'org.slf4j:jcl-over-slf4j:1.7.16'
    testCompile 'org.slf4j:log4j-over-slf4j:1.7.16'
    testCompile 'org.slf4j:jul-to-slf4j:1.7.16'

    // unit testing
    testCompile 'org.testng:testng:6.9.10'
    testCompile 'org.assertj:assertj-core:3.3.0'
}

configurations {
    // exclude any transitively included logging libs
    all*.exclude group: 'commons-logging', module: 'commons-logging'
    all*.exclude group: 'log4j', module: 'log4j'
}


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}